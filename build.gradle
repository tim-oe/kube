tasks.register('loadpg') {
    description = 'load postgres container to kube'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/pgs/pg-config.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/pgs/pg-volume.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/pgs/pg-service.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/pgs/pg-deploy.yml'
        }
    }
}

tasks.register('deletepg') {
    description = 'delete postgres kube resources'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'configMap', 'postgres-config'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'service', 'postgres'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'deploy', 'postgres'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'pvc', 'postgres-pv-claim'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'pv', 'postgres-pv-volume'
        }
    }
}

tasks.register('loadsq') {
    description = 'load postgres container to kube'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/sq/sq-config.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/sq/sq-volume.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/sq/sq-service.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/sq/sq-deploy.yml'
        }
    }
}

tasks.register('deletesq') {
    description = 'delete postgres kube resources'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'configMap', 'sonar-config'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'service', 'sonar'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'deploy', 'sonar'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'delete', 'pvc', 'sonar-pvc'
        }
    }
}

tasks.register('loadjenkins') {
    description = 'load postgres container to kube'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/jenkins/jenkins-volume.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/jenkins/jenkins-deploy.yml'
        }
        exec {
            workingDir '.'
            commandLine 'kubectl', 'apply', '-f', 'src/jenkins/jenkins-service.yml'
        }
    }
}

// https://docs.aws.amazon.com/cli/latest/reference/eks/update-kubeconfig.html
tasks.register('awsConfig') {
    description = 'create kube config file for aws cluster'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'bash', '-c',
            'aws eks update-kubeconfig --name cicd'
        }
    }
}

// https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html
tasks.register('awsCluster') {
    description = 'create aws cluster'
    group = "container"
    doLast {
        exec {
            workingDir '.'
            commandLine 'bash', '-c',
            'aws eks create-cluster ' + 
            '--name cicd ' + 
            '--kubernetes-version 1.27 ' +
            '--role-arn arn:aws:iam::744686699669:role/EKSClusterRole ' +
            '--resources-vpc-config subnetIds=subnet-57a4b40e,subnet-756ec211,securityGroupIds=sg-9e97a0f9'
        }
    }
}
