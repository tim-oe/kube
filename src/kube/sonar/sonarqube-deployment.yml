apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f /src/mnt/raid/sonarqube/docker-compose.yml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: sonarqube
  name: sonarqube
  namespace: sonar
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sonarqube
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f /src/mnt/raid/sonarqube/docker-compose.yml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: sonarqube
    spec:
      initContainers:
        - name: init-max-map
          image: busybox
          command:
            - sysctl
            - '-w'
            - vm.max_map_count=262144
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
        - name: init-file-max
          image: busybox
          command:
            - sysctl
            - '-w'
            - fs.file-max=131072
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
        - name: init-perms
          image: busybox
          command:
            - sh
            - '-c'
            - 'chown -R 1000:1000 /opt/sonarqube'
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-extensions
            - mountPath: /opt/sonarqube/logs
              name: sonarqube-logs
      containers:
        - env:
            - name: SONAR_JDBC_URL
              value: 'jdbc:postgresql://db:5432/sonar'
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-secret
                  key: DATABASE_PWD
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sonarqube-secret
                  key: DATABASE_USER
          image: 'sonarqube:lts-community'
          name: sonarqube
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          ports:
            - containerPort: 9000
              protocol: TCP
          resources:
            requests:
              memory: 2Gi
              cpu: 250m
            limits:
              memory: 4Gi
              cpu: 500m
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube-data
            - mountPath: /opt/sonarqube/extensions
              name: sonarqube-extensions
            - mountPath: /opt/sonarqube/logs
              name: sonarqube-logs
      hostname: sonarqube
      restartPolicy: Always
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: sonarqube-logs
