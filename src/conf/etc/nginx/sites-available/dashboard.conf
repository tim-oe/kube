# /etc/nginx/sites-available/dashboard.conf

upstream k8s_dashboard_backend {
    server tec-kube-pi-n1:443;
    server tec-kube-pi-n2:443;
    server tec-kube-pi-n3:443;
}

server {
    listen 443 ssl;
    server_name dashboard.kube;  # Use the same domain as in your Ingress

    # SSL configuration
    ssl_certificate     /etc/nginx/ssl/dashboard.kube_crt.pem;  # Same cert as used in K8s secret
    ssl_certificate_key /etc/nginx/ssl/dashboard.kube_prv.pem;  # Same key as used in K8s secret

    # SSL optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (uncomment if you're sure)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    location / {
        proxy_pass https://k8s_dashboard_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

	    # auth header token	
	    
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # SSL backend verification (optional)
        # proxy_ssl_verify on;
        # proxy_ssl_trusted_certificate /path/to/trusted-ca.crt;
    }
}

# Optional: Redirect HTTP to HTTPS
server {
    listen 80;
    server_name dashboard.kube;
    return 301 https://$server_name$request_uri;
}
